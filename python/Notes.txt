Observation space is the info taken in
In frozen lake 8x8, there are 64 spaces, with 4 actions (up, down, left, right)
For stardew fisher: 
	Observations:
		Location of fish
			Distance to top
			Distance to bottom
		Location of bar
			Distance to top
			Distance to bottom
		Difference in location

	Actions:
		Hold mouse
		Continue to hold
		Stop holding
		Do nothing

Q: array of [states][actions][probability, nextstate, reward, done]
isd is map into an array


self.observation_space = spaces.Discrete(self.nS), so the number of states = number of observations
States: frozen lake is map, same as observation space

loop:
to_s give state (0 to 63)
li = (probability, nextstate, reward, done)...
	Probability of being done,
	Next state,
	Reward
	Done or not

133: for a in range(4): #Look at every possibility, see what the potential reward is.
		if G (goal) or H (hole):
		li.append((1.0, s, 0, True))
			#Probability = probability of getting to this state I believe
			#s doesn't change
			#0 reward for losing or finishing
			#Done
		
For stardew fisher:
observation, reward, done, info
return the observations, the current reward, done or not, any extra info



greatest time and smallest diff is greatest reward
greatest time and greatest diff is smallest reward

diff > 10, reward is negative
if diff < 10:
	reward = time * 10-diff
else:
	reward = -(time * diff)

-800 to 80, 100 for catching fish





